@import 'rainbow-palette';

$form-width: 400px;
$form-padding: 20px;
$row-height: 40px;

$signup-rows: 7;
$signup-height: $form-padding + $signup-rows * ($row-height + $form-padding);

$signin-rows: 3;
$signin-height: $form-padding + $signin-rows * ($row-height + $form-padding);

form {
  &#signupForm {
    height: $signup-height;
    @for $index from 0 to $signup-rows {
      .row[row="#{$index + 1}"] {
        top: $form-padding + ($row-height + $form-padding) * $index;
      }
    }
  }
  &#signinForm {
    height: $signin-height;
    @for $index from 0 to $signin-rows {
      .row[row="#{$index + 1}"] {
        top: $form-padding + ($row-height + $form-padding) * $index;
      }
    }
  }
  position: absolute;
  left: 50%;
  top: 50%;
  width: $form-width;
  transform: translate(-50%, -50%);
  background: rgba($theme-col-delta-4, .6);
  outline: 3px solid rgba($theme-col-delta-2, .4);
  .row {
    position: absolute;
    left: $form-padding;
    right: $form-padding;
    height: $row-height;
    .field {
      position: absolute;
      height: inherit;
      &.full {
        left: 0;
        width: $form-width - 2 * $form-padding;
      }
      &.half {
        &.left {
          left: 0;
        }
        &.right {
          right: 0;
        }
        width: ($form-width - 3 * $form-padding) / 2;
      }
      &.loader-7 input {
          &:disabled {
              background: rgba($theme-col-gamma-2, .9);
          }
      }
      input, button, a {
        position: absolute;
        width: 100%;
        height: 100%;
        height: $row-height;
        outline: none;
        border-radius: 5px;
        transition: all .75s cubic-bezier(0, 0, .38, 1);
      }
      a {
        //cursor: pointer;
        border: none;
        background: rgba($theme-col-zeta-4, .9);
        box-shadow: inset 0 -5px 45px rgba($theme-col-epsilon-1, 0.2), 0 1px 1px rgba(white, 0.2);
        text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
        line-height: $row-height;
        text-align: center;
        text-decoration: none;
        &:hover {
          background: rgba($theme-col-alpha-2, .9);
          box-shadow: inset 0 -5px 45px rgba(black, 0.6), 0 1px 1px rgba(white, 0.2);
        }
        &:active {
          box-shadow: inset 0 -5px 45px rgba(black, 0.6), 0 1px 1px rgba(white, 0.2);
        }
        &:disabled {
          background: rgba($theme-col-alpha-2, .9);
          pointer-events: none;
        }
      }
      button[type=submit] {
        cursor: pointer;
        border: none;
        background: rgba($theme-col-alpha-4, .9);
        box-shadow: inset 0 -5px 45px rgba($theme-col-epsilon-1, 0.2), 0 1px 1px rgba(white, 0.2);
        text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
        &:hover {
          background: rgba($theme-col-zeta-2, .9);
          box-shadow: inset 0 -5px 45px rgba(black, 0.6), 0 1px 1px rgba(white, 0.2);
        }
        &:active {
          box-shadow: inset 0 -5px 45px rgba(black, 0.6), 0 1px 1px rgba(white, 0.2);
        }
        &:disabled {
          background: rgba($theme-col-alpha-2, .9);
          pointer-events: none;
        }
      }
      input[type=text],
      input[type=password] {
        display: block;
        position: absolute;
        opacity: 1;
        display: block;
        padding: 10px;
        border: 1px solid rgba($theme-col-alpha-4, 0.8);
        background: rgba($theme-col-gamma-4, .9);
        box-shadow: inset 0 -5px 45px rgba($theme-col-alpha-2, 0.2), 0 1px 1px rgba(white, 0.2);
        text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
        &:focus {
          border: 1px solid transparent;
          box-shadow: inset 0 -5px 45px rgba($theme-col-alpha-1, 0.4), 0 1px 1px rgba(white, 0.2);
        }
        &.ng-invalid.ng-touched {
          border: 1px solid transparent;
          box-shadow: inset 0 -5px 45px rgba(red, 0.6), 0 1px 1px rgba(white, 0.2);
        }
      }
    }
  }
}